
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@RestController
@RequestMapping("/${classname}/config")
@Api(value = "${className}-controller", tags = "相关接口")
public class ${className}Controller {

    @Autowired
        ${className}Service ${classname}Service;

    @RequestMapping(value = "/addOrUpdate${className}", method = RequestMethod.POST, produces = "application/json; charset=utf-8")
    @ApiImplicitParam(name = "Authorization", value = "Authorization", required = true, dataType = "String", paramType = "header")
    @ApiOperation(value = "添加或修改", httpMethod = "POST", notes = "添加或修改", response = ResultModel.class)
    public ResponseEntity<?> addOrUpdate${className}(@RequestBody @Valid ${className} ${classname}, @CurrentUser Admin admin) {
        return ${classname}Service.addOrUpdate${className}(${classname}, admin);
    }

    @RequestMapping(value = "/get${className}ListPage", method = RequestMethod.POST)
    @ApiImplicitParam(name = "Authorization", value = "Authorization", required = true, dataType = "String", paramType = "header")
    @ApiOperation(value = "分页按条件查询列表", httpMethod = "POST", notes = "分页按条件查询列表", response = ${className}.class)
    public ResponseEntity<?> get${className}ListPage(@RequestBody ${className} ${classname}) {
        return ${classname}Service.get${className}ListPage(${classname});
    }

    @RequestMapping(value = "/del${className}/{id}", method = RequestMethod.GET)
    @ApiImplicitParam(name = "Authorization", value = "Authorization", required = true, dataType = "String", paramType = "header")
    @ApiOperation(value = "删除记录", httpMethod = "GET", notes = "删除记录", response = ResultModel.class)
    public ResponseEntity<?> del${className}(@PathVariable Long id) {
        return ${classname}Service.del${className}(id);
    }

    @RequestMapping(value = "/edit${className}Status/{id}/{status}", method = RequestMethod.GET)
    @ApiImplicitParam(name = "Authorization", value = "Authorization", required = true, dataType = "String", paramType = "header")
    @ApiOperation(value = "修改状态", httpMethod = "GET", notes = "修改状态", response = ResultModel.class)
    public ResponseEntity<?> edit${className}Status(@PathVariable Long id,@PathVariable Integer status) {
        return ${classname}Service.edit${className}Status(id,status);
    }



}
